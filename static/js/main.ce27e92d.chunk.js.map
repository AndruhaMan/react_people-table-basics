{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/Loader/Loader.tsx","api.ts","components/PersonLink/PersonLink.tsx","components/PersonTableRaw/PersonTableRaw.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","components/UnknownPage/UnknownPage.tsx","Root.tsx","index.tsx"],"names":["App","getLinkClass","_ref","isActive","classNames","_jsxs","children","_jsx","className","role","NavLink","to","Outlet","HomePage","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","PersonLink","person","setSelectedPersonSlug","name","slug","sex","onClick","PersonTableRaw","selectedPersonSlug","born","died","fatherName","motherName","_person$mother","mother","_person$father","father","PeopleTable","people","map","PeoplePage","useParams","_useState","useState","_useState2","_slicedToArray","setPeople","_useState3","_useState4","_useState5","_useState6","isError","setIsError","_useState7","_useState8","isLoading","setIsLoading","useEffect","fetchedPeople","personCopy","_objectSpread","find","mom","dad","catch","finally","isLoadedSuccessfully","_Fragment","length","UnknownPage","Root","Router","Routes","Route","element","index","path","Navigate","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.ce27e92d.chunk.js","sourcesContent":["import { NavLink, Outlet } from 'react-router-dom';\n\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const App = () => {\n  const getLinkClass = ({ isActive }: { isActive: boolean }) => {\n    return classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    );\n  };\n\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink className={getLinkClass} to=\"/\">\n              Home\n            </NavLink>\n\n            <NavLink className={getLinkClass} to=\"/people\">\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","export const HomePage = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person,\n  setSelectedPersonSlug: (slug: string) => void,\n};\n\nexport const PersonLink: React.FC<Props> = ({\n  person,\n  setSelectedPersonSlug,\n}) => {\n  const {\n    name,\n    slug,\n    sex,\n  } = person;\n\n  const getLinkClass = () => {\n    if (sex === 'f') {\n      return 'has-text-danger';\n    }\n\n    return '';\n  };\n\n  return (\n    <NavLink\n      to={slug}\n      onClick={() => setSelectedPersonSlug(slug)}\n      className={getLinkClass}\n    >\n      {name}\n    </NavLink>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person,\n  selectedPersonSlug: string,\n  setSelectedPersonSlug: (slug: string) => void,\n};\n\nexport const PersonTableRaw: React.FC<Props> = ({\n  person,\n  selectedPersonSlug,\n  setSelectedPersonSlug,\n}) => {\n  const {\n    slug,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    mother = null,\n    father = null,\n  } = person;\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === selectedPersonSlug\n        ? 'has-background-warning'\n        : ''}\n    >\n      <td>\n        <PersonLink\n          person={person}\n          setSelectedPersonSlug={setSelectedPersonSlug}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink\n              person={mother}\n              setSelectedPersonSlug={setSelectedPersonSlug}\n            />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink\n              person={father}\n              setSelectedPersonSlug={setSelectedPersonSlug}\n            />\n          )\n          : fatherName || '-'}\n      </td>\n    </tr>\n  );\n};\n","import { Person } from '../../types';\nimport { PersonTableRaw } from '../PersonTableRaw/PersonTableRaw';\n\ntype Props = {\n  people: Person[],\n  selectedPersonSlug: string,\n  setSelectedPersonSlug: (slug: string) => void,\n};\n\nexport const PeopleTable: React.FC<Props> = ({\n  people,\n  selectedPersonSlug,\n  setSelectedPersonSlug,\n}) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonTableRaw\n            key={person.slug}\n            person={person}\n            selectedPersonSlug={selectedPersonSlug}\n            setSelectedPersonSlug={setSelectedPersonSlug}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Person } from '../../types';\nimport { getPeople } from '../../api';\nimport { PeopleTable } from '../PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const { slug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [\n    selectedPersonSlug,\n    setSelectedPersonSlug,\n  ] = useState<string>(slug || '');\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getPeople()\n      .then((fetchedPeople) => {\n        setPeople(fetchedPeople.map(person => {\n          const personCopy = { ...person };\n          const mother = fetchedPeople.find(mom => (\n            mom.name === person.motherName\n          ));\n          const father = fetchedPeople.find(dad => (\n            dad.name === person.fatherName\n          ));\n\n          personCopy.mother = mother;\n          personCopy.father = father;\n\n          return personCopy;\n        }));\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const isLoadedSuccessfully = !isError && !isLoading;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && (\n            <Loader />\n          )}\n\n          {isError && !isLoading && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {isLoadedSuccessfully && people.length === 0 && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {isLoadedSuccessfully && people.length > 0 && (\n            <PeopleTable\n              people={people}\n              selectedPersonSlug={selectedPersonSlug}\n              setSelectedPersonSlug={setSelectedPersonSlug}\n            />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","export const UnknownPage = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import {\n  Navigate,\n  Route,\n  HashRouter as Router,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage } from './components/HomePage/HomePage';\nimport { PeoplePage } from './components/PeoplePage/PeoplePage';\nimport { UnknownPage } from './components/UnknownPage/UnknownPage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<UnknownPage />} />\n      </Route>\n      <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}